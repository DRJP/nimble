install.packages('Rcpp')
install.packages('quadprog')
library(InvCon)
ls()
icfit <- inverse.convex(rnorm(100))
icfit
plot(icfit)
source('loadAllCode.R')
workingdir <- 'C:/Users/Daniel/Documents/Dropbox/My Documents from Berkeley computer/R/9 multievent CR model from Olivier'
load(file.path(workingdir, 'multievent_CR_datafile.RData'))
source('loadAllCode.R')
workingdir <- 'C:/Users/Daniel/Documents/Dropbox/My Documents from Berkeley computer/R/9 multievent CR model from Olivier'
file.path(workingdir, 'multievent_CR_datafile.RData')
load(file.path(workingdir, 'multievent_CR_datafile.RData'))
4
mydata
age
e
source(file.path(workingdir, 'multievent_CR_model_definition.R'))
multistateModelCode
alive <- mydata
for (i in 1:n) {
for (j in 1:K) {
if (j > e[i] & mydata[i,j]==0) {alive[i,j] <- which(rmultinom(1, 1, c(1/4,1/4,1/4,1/4))==1)}
if (j < e[i]) {alive[i,j] <- NA}
}
}
alive
constants <- list(N=n, Years=K, First=e, age=as.matrix(age))
data      <- list(mydata=as.matrix(mydata+1))
inits     <- list(alive=alive)
## build NIMBLE model and MCMC
system.time(Rmodel <- nimbleModel(multistateModelCode, constants=constants, data=data, inits=inits))  ## 17 mins
system.time(Cmodel <- compileNimble(Rmodel))  ## 10 mins
system.time(mcmcSpec <- MCMCspec(Rmodel, print=TRUE, monitors=c('pNB','pB','phiBsa','phiBa','phiNBy','phiNBsa','phiNBa','alpha')))  ## 1 min
system.time(Rmcmc <- buildMCMC(mcmcSpec))  ## 5 mins
system.time(Cmcmc <- compileNimble(Rmcmc, project = Rmodel))  ## 68 mins
niter <- 1
set.seed(0)
system.time(Cmcmc(niter))
samples <- as.matrix(nfVar(Cmcmc, 'mvSamples'))
dimnames(samples)
samples
head(samples)
niter <- 100
set.seed(0)
system.time(Cmcmc(niter))
samples <- as.matrix(nfVar(Cmcmc, 'mvSamples'))
head(samples)
niter <- 10000
set.seed(0)
system.time(Cmcmc(niter))
675/60
samples <- as.matrix(nfVar(Cmcmc, 'mvSamples'))
head(samples)
?apply
apply(samples, 1, mean)
apply(samples, 2, mean)
apply(samples, 2, sd)
