		  CHANGES IMPLEMENTED IN VERSION 0.3

—- VERY IMPORTANT SYNTAX CHANGE: nimble functions are run via myNimbleFunction$run() instead of myNimbleFunction(). This means code written in v0.2 and below will not run without adding $run. (Note: model$calculate() was NOT implemented)

—- VERY IMPORTANT SYNTAX CHANGED: writing code for nimble models is now done with nimbleCode (previously modelCode), to customize MCMC use myMCMCspec <- configureMCMC(myModel) (previously MCMCspec). To build an MCMC algorithm, either myGenericMCMC <- buildMCMC(myModel) for a generic build or myCustomizedMCMC <- buildMCMC(myMCMCspec) for a customized MCMC algorithm can be used (previously always had to build an MCMCspec, even for generic build)

—- faster compiling, most notably when compiling MCMC algorithms

—- Fixed bug regarding calculating log probabilities for multinomial distribution with probabilities equal to 0

 

                  PLANNED CHANGES IN VERSION 0.3 

-- use of model$calculate() as an alternative to calculate(model)

-- more general nodeVectors as data structure for referring to collections of nodes as well as replacing nodeFunctionVectors

-- change in how nimbleFunctions are returned and used, so that the reference class object rather than a function wrapping a call to the run method is returned.  this will simplify several aspects of how nimbleFunctions are used.

-- more improvements to compilation speed (we hope)

-- see ISSUES list for many more improvements on our agenda



                     CHANGES IN VERSION 0.2 (Oct. 12, 2014)

-- Internal changes to decrease time to build models and nimbleFunctions.

-- Multivariate conjugate updaters are now included in the default MCMC implementation, as well as block updating on scalar and/or multivariate nodes.

-- Vector treatment of is.na and is.nan, so is.na(values(model, nodes)) will work, equivalently to any(is.na(...)) in R.

-- More extensive suite of tests.

-- Extension of node maps, which can be accessed via graphIDs, to increase speed of determining node types, checking if nodes in model, etc. 

-- model$getNodeNames, expandNodeNames and getDependencies all return the full node function name, i.e. if 'x[1:2]' is multivariate, will return 'x[1:2]' rather than 'x[1]', 'x[2]', unless returnScalarComponents = TRUE

-- Added class of nodeVectors, which save the graphIDs of a set of nodes. Use of these is minimal at the moment. 

Bug fixes

-- Fixed issue with specifying multivariate nodes as rows/columns of matrices

-- Fixed bug in the conjugacy system

-- Fixed bug in compiled version of adaptive block updater

-- Fixed issue with building the NIMBLE package for Windows, as well as cleaning up causes of compiler warnings.

-- Fixed issue that values(model, nodes) sorted the outcome. Remaining bug to be fixed: nimCopy(nodesFrom, nodesTo) will NOT work if nodesFrom and nodesTo have different number/different lengths of ordered contingent blocks of memory, i.e. nimCopy(nodesFrom = c('x[1]', 'x[2]'), nodesTo = c('y[2]', 'y[1]')) will fail because nodesFrom is one block but nodesTo is two blocks

-- Fixed issue that chol(A+B) was being translated to chol(A) + B


                     CHANGES IN VERSION 0.1-1 (Aug. 28, 2014)


Bug fixes

-- handling of spaces in installed directory name on Windows

-- ensured that various Makevars and Makevars.in and Makevars.win files are
  provided in the package for proper installation on all platforms
