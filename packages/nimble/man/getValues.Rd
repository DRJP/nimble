% Generated by roxygen2 (4.0.1): do not edit by hand
\name{getValues}
\alias{getValues}
\title{Fill a vector with flattened values from a set of model nodes}
\usage{
getValues(vals, model, nodes)
}
\arguments{
  \item{vals}{the variable in the calling function to
  receive the values}

  \item{model}{a NIMBLE model object, either compiled or
  uncompiled}

  \item{nodes}{a vector of node names, allowing index
  blocks that will be expanded}
}
\value{
NULL, but this function works by the side-effect of
modifying P in the calling environment.
}
\description{
Take a vector of node names for a model and fill a vector
by concatenating their values.  Works in R and NIMBLE.
}
\details{
Calling \code{getValues(P, model, nodes)} will modify P in
the calling function.  This is being deprecated by \code{P
<- values(model, nodes)}, but the development syntax of
\code{getValues(P, model, nodes)} is still supported.

The result P will be the concatenation of values from the
nodes requested.  When requested nodes are from matrices or
arrays, the values will be flattened into a vector
following column-wise order.

The reverse of \code{getValues(P, model, nodes)} is
\code{setValues(P, model, nodes)}, which is being
deprecated by \code{values(model, nodes) <- P}.

These functions work in R and in NIMBLE run-time code that
can be compiled.
}
\author{
NIMBLE development team
}

