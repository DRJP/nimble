% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in RtmpTGWyjf/file1d682217919a
\name{buildPF}
\alias{buildPF}
\title{Creates a particle filter (sequential monte carlo) algorithm to estimate the log-likelihood for a model sub-graph}
\usage{
buildPF(model, nodes, silent = FALSE)
}
\arguments{
  \item{model}{A nimble model object, typically representing
  a state space model or a hidden Markov model} \item{nodes}
  {A character vector specifying the latent model nodes over
  which the particle filter will stochastically integrate
  over to estimate the log-likelihood function}
}
\description{
Creates a particle filter (sequential monte carlo) algorithm
to estimate the log-likelihood for a model sub-graph
}
\details{
The resulting specialized particle filter algorthm will
accept a single integer argument (m, default 10,000), which
specifies the number of random \'particles\' to use for
estimating the log-likelihood. The algorithm returns the
estimated log-likelihood value.
}
\examples{
model <- nimbleModel(code = ...)
my_PF <- buildPF(model, 'x[1:100]')
Cmodel <- compileNimble(model)
Cmy_PF <- compileNimble(my_PF, project = model)
logLike <- Cmy_PF$run(m = 100000)
}
\author{
Daniel Turek
}

