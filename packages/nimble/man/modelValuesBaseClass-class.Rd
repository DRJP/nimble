% Generated by roxygen2 (4.1.1): do not edit by hand
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
% Please edit documentation in Rtmpzdod9z/file79ee18dea6c8
=======
% Please edit documentation in RtmpLwENQY/file61613d8c344d
>>>>>>> updated S3 methods to follow
=======
% Please edit documentation in Rtmps9T35v/file3fb3b738736
>>>>>>> various updates to roxygen
=======
% Please edit documentation in RtmpnG0e98/file11b03a3987b5
>>>>>>> took Makefiles out of
=======
% Please edit documentation in RtmpAPakJJ/file50d6101e3716
>>>>>>> fixed error in MCMCspec roxygen example
=======
% Please edit documentation in RtmpmO7lLg/file49766a5ef088
>>>>>>> updated suite and autoblock roxygen
=======
% Please edit documentation in Rtmp60KOwh/file78716b707fe9
>>>>>>> added line to remove .o files after create
=======
% Please edit documentation in Rtmpgi4ISD/file4c346355020d
>>>>>>> various cleanups of roxygen stuff
=======
% Please edit documentation in RtmpkxJCni/file2c0b718db894
>>>>>>> removed top level tests dir
\docType{class}
\name{modelValuesBaseClass-class}
\alias{[,CmodelValues-method}
\alias{[,CmodelValues-method,ANY,ANY}
\alias{[,CmodelValues-method,character,missing}
\alias{[,CmodelValues-method,character,missing,ANY-method}
\alias{[,modelValuesBaseClass-method}
\alias{[<-,CmodelValues-method}
\alias{[<-,modelValuesBaseClass-method}
\alias{[[,CmodelValues-method}
\alias{[[<-,CmodelValues-method}
\alias{modelValuesBaseClass}
\alias{modelValuesBaseClass-class}
\title{Class \code{modelValuesBaseClass}}
\description{
modelValues are NIMBLE containers built to store values from
models. They can either be built directly from a model or be
custom built via the \code{modelValuesSpec} function. They
consist of rows, where each row can be thought of as a set
of values from a model. Like most nimble objects, and unlike
most R objects, they are passed by reference instead of by
value. See user manual for more details.
}
\examples{
mvSpec <- modelValuesSpec(vars = c('a', 'b'),
		types = c('double', 'double'),
		sizes = list(a = 1, b = c(2,2) ) )
mv <- modelValues(mvSpec)
as.matrix(mv)
resize(mv, 2)
as.matrix(mv)
mv['a',1] <- 1
mv['a',2] <- 2
mv['b',1] <- matrix(0, nrow = 2, ncol = 2)
mv['b',2] <- matrix(1, nrow = 2, ncol = 2)
mv['a',]
as.matrix(mv)
basicModelCode <- nimbleCode({
	a ~ dnorm(0,1)
	for(i in 1:4)
		b[i] ~ dnorm(0,1)
})
basicModel <- nimbleModel(basicModelCode)
basicMV <- modelValues(basicModel, m = 2)	# m sets the number of rows
basicMV['b',]
}

