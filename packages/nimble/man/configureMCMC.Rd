% Generated by roxygen2 (4.1.1): do not edit by hand
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
% Please edit documentation in Rtmpzdod9z/file79ee2a9e4f3d
=======
% Please edit documentation in Rtmps9T35v/file3fb34509a7e4
>>>>>>> various updates to roxygen
=======
% Please edit documentation in RtmpnG0e98/file11b04fd2232a
>>>>>>> took Makefiles out of
=======
% Please edit documentation in RtmpAPakJJ/file50d6b411e9d
>>>>>>> fixed error in MCMCspec roxygen example
=======
% Please edit documentation in RtmpmO7lLg/file49763b5799b
>>>>>>> updated suite and autoblock roxygen
=======
% Please edit documentation in Rtmp60KOwh/file787173630367
>>>>>>> added line to remove .o files after create
=======
% Please edit documentation in Rtmpgi4ISD/file4c345ac178ee
>>>>>>> various cleanups of roxygen stuff
=======
% Please edit documentation in RtmpkxJCni/file2c0b641f2ee4
>>>>>>> removed top level tests dir
=======
% Please edit documentation in RtmpaEoKPd/file20ba60da4ed7
>>>>>>> fixed up some roxygen stuff and
\name{configureMCMC}
\alias{autoBlock}
\alias{configureMCMC}
\title{Build the MCMCspec object for construction of an MCMC object}
\usage{
configureMCMC(model, nodes, control = list(), monitors, thin = 1,
  monitors2 = character(), thin2 = 1, useConjugacy = TRUE,
  onlyRW = FALSE, onlySlice = FALSE, multivariateNodesAsScalars = FALSE,
  print = FALSE, autoBlock = FALSE, oldSpec, ...)
}
\arguments{
\item{model}{A NIMBLE model object, created from \link{nimbleModel}}\item{nodes}{An optional character vector, specifying the nodes and/or variables for which samplers should be created.
Nodes may be specified in their indexed form, \code{y[1, 3]}.  Alternatively, nodes specified without indexing will be expanded fully, e.g., \code{x} will be expanded to \code{x[1]}, \code{x[2]}, etc.
If missing, the default value is all non-data stochastic nodes.
If NULL, then no samplers are added.}

\item{control}{An optional list of control arguments to sampler functions.  If a control list is provided, the elements will be provided to all sampler functions which utilize the named elements given.
For example, the standard Metropolis-Hastings random walk sampler (\link{sampler_RW}) utilizes control list elements \code{adaptive}, \code{adaptInterval}, and \code{scale}.
(Internally it also uses \code{targetNode}, but this should not generally be provided as a control list element).
The default values for control list arguments for samplers (if not otherwise provided as an argument to configureMCMC() ) are in the NIMBLE system option \code{MCMCcontrolDefaultList}.}

\item{monitors}{A character vector of node names or variable names, to record during MCMC sampling.
This set of monitors will be recorded with thinning interval \code{thin}, and the samples will be stored into the \code{mvSamples} object.
The default value is all top-level stochastic nodes of the model -- those having no stochastic parent nodes.}

\item{thin}{The thinning interval for \code{monitors}.  Default value is one.}\item{monitors2}{A character vector of node names or variable names, to record during MCMC sampling.
This set of monitors will be recorded with thinning interval \code{thin2}, and the samples will be stored into the \code{mvSamples2} object.
The default value is an empty character vector, i.e. no values will be recorded.}

\item{thin2}{The thinning interval for \code{monitors2}.  Default value is one.}\item{useConjugacy}{A logical argument, with default value TRUE.  If specified as FALSE, then no conjugate samplers will be used, even when a node is determined to be in a conjugate relationship.}\item{onlyRW}{A logical argument, with default value FALSE.  If specified as TRUE, then Metropolis-Hastings random walk samplers (\link{sampler_RW}) will be assigned for all non-terminal continuous-valued nodes nodes.
Discrete-valued nodes are assigned a slice sampler (\link{sampler_slice}), and terminal (predictive) nodes are assigned an end sampler (\link{sampler_end}).}

\item{onlySlice}{A logical argument, with default value FALSE.  If specified as TRUE, then a slice sampler is assigned for all non-terminal nodes.
Terminal (predIctive) nodes are still assigned an end sampler (sampler_end).}

\item{multivariateNodesAsScalars}{A logical argument, with default value FALSE.  If specified as TRUE, then non-terminal multivariate stochastic nodes will have scalar samplers assigned to each of the scalar components of the multivariate node.  The default value of FALSE results in a single block sampler assigned to the entire multivariate node.  Note, multivariate nodes appearing in conjugate relationships will be assigned the corresponding conjugate sampler (provided \code{useConjugacy == TRUE}), regardless of the value of this argument.}\item{print}{A logical argument, specifying whether to print the ordered list of default samplers.}\item{autoBlock}{A logical argument specifying whether to use an automated blocking procedure to determine blocks of model nodes for joint sampling.  If TRUE, an MCMC specification object will be created and returned corresponding to the results of the automated parameter blocking.  Default value is FALSE.}\item{oldSpec}{An optional MCMCspec object to modify rather than creating a new MCMCspec from scratch}\item{...}{Additional arguments to be passed to the \code{autoBlock()} function when \code{autoBlock = TRUE}}}\description{
Creates a defaut MCMC specification for a given model.  The resulting object is suitable as an argument to \link{buildMCMC}.
}
\details{
See \code{MCMCspec} for details on how to manipulate the \code{MCMCspec} object
}
\author{
Daniel Turek
}

