\name{nimble-internal}
\title{Functions and Classes Internal to NIMBLE}
\alias{accessorVectorLength_setupCodeTemplate}
\alias{addNecessarySetupCode}
\alias{addNewCode}
\alias{addNodeFxn}
\alias{addNodeFxn_LOOP}
\alias{addSetupCodeNames}
\alias{addSingleModelValuesAccess}
\alias{addSingleVarAccess}
\alias{allLHSNodes_SetupTemplate}
\alias{allModelNodes_SetupTemplate}
\alias{allModelValuesVars_SetupTemplate}
\alias{as.matrix.CmodelValues}
\alias{as.matrix.modelValuesBaseClass}
\alias{asCol}
\alias{asRow}
\alias{assignNumberedObject}
\alias{BUGScode}
\alias{BUGScontextClass}
\alias{BUGSdeclClass}
\alias{BUGSsingleContextClass}
\alias{buildModelInterface}
\alias{buildNimbleFxnInterface}
\alias{cAddBlank}
\alias{calc_E_llk_gen}
\alias{calcAdaptationFactor}
\alias{calcNodes}
\alias{calcNodesMV}
\alias{calculate}
\alias{calculate_keywordInfo}
\alias{cc_createStructureExpr}
\alias{cc_createStructureExpr_fromModel}
\alias{cc_structureExprName}
\alias{cc_vectorizedComponentCheck}
\alias{cCopyVariableRows}
\alias{cGetNRow}
\alias{character2index}
\alias{checkNimbleFunctionListCpp}
\alias{cloglog}
\alias{Cmatrix2mvOneVar}
\alias{CmodelValues}
\alias{code2Name_fromArgList}
\alias{combineIndices2Flat}
\alias{compileNimble}
\alias{configureMCMC}
\alias{conjugacyClass}
\alias{conjugacyRelationshipsClass}
\alias{conjugacyRelationshipsInputList}
\alias{conjugacyRelationshipsObject}
\alias{conjugateSamplerDefinitions}
\alias{controlDefaultList}
\alias{cppBUGSmodelClass}
\alias{cppClassDef}
\alias{createDefault_isDataObj}
\alias{createNamedObjectsFromList}
\alias{cube}
\alias{dcat}
\alias{ddirch}
\alias{decide}
\alias{decideAndJump}
\alias{declare}
\alias{dependentClass}
\alias{determineNdimFromOneCase}
\alias{determineNdimsFromNfproc}
\alias{dimOrLength}
\alias{dmnorm_chol}
\alias{dmulti}
\alias{dollarSign_keywordInfo}
\alias{doubleBracket_keywordInfo}
\alias{dt_nonstandard}
\alias{dwish_chol}
\alias{evalBracketArgs}
\alias{evalBracketArgsKnownBracket}
\alias{existsFunctionEnvVar}
\alias{expandIndexSet4sapply}
\alias{expit}
\alias{extractFlatIndices_wVarInfo}
\alias{gd_allNeighbors}
\alias{gd_getDependencies_IDs}
\alias{genIndexVarValues_recurse}
\alias{genLogProbNodeExprAndReplacements}
\alias{genReplacementsAndCodeRecurse}
\alias{getBoolValue}
\alias{getCallText}
\alias{getDoubleValue}
\alias{getFunctionEnvVar}
\alias{getFxnVectorPtr}
\alias{getIntValue}
\alias{getLoadingNamespace}
\alias{getLogProb}
\alias{getLogProb_keywordInfo}
\alias{getLogProbNodes}
\alias{getLogProbNodesMV}
\alias{getModelAccessorValues}
\alias{getModelValuesAccessorValues}
\alias{getModelValuesSpec}
\alias{getMVName}
\alias{getMVptr}
\alias{getNamedObjected}
\alias{getNimbleProject}
\alias{getNimbleTypes}
\alias{getNimValues}
\alias{getNodeFxnPtrs}
\alias{getNumberedObject}
\alias{getPosteriorDensityFromConjSampler}
\alias{getPosteriorDensityFromConjSampler_virtual}
\alias{getSize_NumberedObjects}
\alias{getSymbolicParentNodes}
\alias{getSymbolicParentNodesRecurse}
\alias{getValues}
\alias{getVarAndIndices}
\alias{icloglog}
\alias{ilogit}
\alias{inner_populateNodeFxnVec}
\alias{inprod}
\alias{inverse}
\alias{iprobit}
\alias{is.blank}
\alias{is.indexed}
\alias{is.nf}
\alias{is.nfGenerator}
\alias{is.vectorized}
\alias{isCodeArgBlank}
\alias{isModelValuesSpec}
\alias{isSetupCodeGenerated}
\alias{isSymbolType}
\alias{keywordInfoClass}
\alias{keywordList}
\alias{labelFunctionCreator}
\alias{length.modelValuesAccessorVector}
\alias{length.modelVariableAccessorVector}
\alias{length.nimPointerList}
\alias{linkInverses}
\alias{logdet}
\alias{logfact}
\alias{loggam}
\alias{logit}
\alias{makeBUGSclassFields}
\alias{MakeCustomModelClass}
\alias{makeCustomModelValuesClass}
\alias{makeMV_GID_Map}
\alias{makeSingleModelValuesAccessor}
\alias{map_SetupTemplate}
\alias{matchAndFill.call}
\alias{matchFunctions}
\alias{matchKeywordCode}
\alias{matrix2mv}
\alias{mcmcCheckRHS_Init}
\alias{mcmcFillDetermTop_Init}
\alias{mcmcStochNode_Init}
\alias{MCMCsuite}
\alias{modelDefClass}
\alias{modelDefInfoClass}
\alias{modelValues}
\alias{modelValuesAccessor}
\alias{modelValuesAccessorVector}
\alias{modelValuesAccessorVector_setupCodeTemplate}
\alias{modelValuesSpec}
\alias{modelVariableAccessor}
\alias{modelVariableAccessorVector}
\alias{modelVariableAccessorVector_setupCodeTemplate}
\alias{mvInfoClass}
\alias{newManyModelValuesAccess}
\alias{newManyVarAccess}
\alias{newNodeFxnVec}
\alias{newNumberedObjects}
\alias{newObjElementPtr}
\alias{nf_getGeneratorFunction}
\alias{nf_getInstances}
\alias{nf_getMethodList}
\alias{nf_getRefClassObject}
\alias{nf_getSetupOutputNames}
\alias{nfCompilationInfoClass}
\alias{nfGetDefVar}
\alias{nfMethod}
\alias{nfPFstep}
\alias{nfPFStepVir}
\alias{nfProcessing}
\alias{nfVar}
\alias{nfVar<-}
\alias{nimbleEquals}
\alias{nimbleFunction}
\alias{nimbleFunctionList}
\alias{nimbleFunctionVirtual}
\alias{nimbleOrRfunctionNames}
\alias{nimbleProjectClass}
\alias{nimbleStep}
\alias{nimbleUniqueID}
\alias{nimCopy}
\alias{nimCopy_keywordInfo}
\alias{nimPointerList}
\alias{nimPrint}
\alias{nl_addIndicesToVariables}
\alias{nl_aggregateConsecutiveBlocks}
\alias{nl_checkNodeNamesInModel}
\alias{nl_checkVarNamesInModel}
\alias{nl_createVarsAndFlatIndexRanges}
\alias{nl_determineFlatIndex}
\alias{nl_expandNodeIndex}
\alias{nl_expandNodeIndexExpr}
\alias{nl_expandNodeNames}
\alias{nl_getVarNameFromNodeName}
\alias{nl_nodeVectorReadyNodes}
\alias{nl_removeNodeNamesNotInSymbolTable}
\alias{nl_vectorizedExpandNodeIndex}
\alias{nl_vectorizedExpandNodeIndexExprs}
\alias{node_determ}
\alias{node_stoch_dbern}
\alias{node_stoch_dbeta}
\alias{node_stoch_dbin}
\alias{node_stoch_dcat}
\alias{node_stoch_dchisq}
\alias{node_stoch_ddirch}
\alias{node_stoch_dexp}
\alias{node_stoch_dgamma}
\alias{node_stoch_dlnorm}
\alias{node_stoch_dlogis}
\alias{node_stoch_dmnorm}
\alias{node_stoch_dmulti}
\alias{node_stoch_dnegbin}
\alias{node_stoch_dnorm}
\alias{node_stoch_dpois}
\alias{node_stoch_dt}
\alias{node_stoch_dunif}
\alias{node_stoch_dweib}
\alias{node_stoch_dwish}
\alias{nodeFunction}
\alias{nodeFunctionVector}
\alias{nodeFunctionVector_SetupTemplate}
\alias{nodeInfoClass}
\alias{numberedModelValuesAccessors}
\alias{numberedModelVariableAccessors}
\alias{numberedObjects}
\alias{parseEvalNumeric}
\alias{pasteExpr}
\alias{phi}
\alias{pointAt}
\alias{populateManyModelValuesAccess}
\alias{populateManyModelVarAccess}
\alias{populateNodeFxnVec}
\alias{populateNodeFxnVec_OLD}
\alias{posteriorClass}
\alias{pow}
\alias{probit}
\alias{processKeyword}
\alias{rankSample}
\alias{rcat}
\alias{RCfunInfoClass}
\alias{rdirch}
\alias{removeIndexing}
\alias{removeLogProbName}
\alias{removeNodeFxn}
\alias{removeSingleModelValuesAccess}
\alias{removeSingleVarAccess}
\alias{removeVariableFromEnv}
\alias{resize_NumberedObjects}
\alias{resizeCModelAccessors}
\alias{resizeCModelValuesAccessors}
\alias{resizeNodeFxnVec}
\alias{RMakeCustomModelClass}
\alias{Rmatrix2mvOneVar}
\alias{rmnorm_chol}
\alias{rmulti}
\alias{Rname2CppName}
\alias{rt_nonstandard}
\alias{rwish_chol}
\alias{sampler_BASE}
\alias{sampler_conjugate_dbeta}
\alias{sampler_conjugate_dgamma}
\alias{sampler_conjugate_dmnorm}
\alias{sampler_conjugate_dnorm}
\alias{sampler_conjugate_dwish}
\alias{sampler_crossLevel}
\alias{sampler_end}
\alias{sampler_RW}
\alias{sampler_RW_block}
\alias{sampler_RW_llFunction}
\alias{sampler_slice}
\alias{samplerSpec}
\alias{setAndCalculate}
\alias{setAndCalculateOne}
\alias{setBoolValue}
\alias{setDoublePtrFromSinglePtr}
\alias{setDoubleValue}
\alias{setIntValue}
\alias{setNimValues}
\alias{setOnePtrVectorOfPtrs}
\alias{setPtrVectorOfPtrs}
\alias{setSize}
\alias{setupCodeTemplateClass}
\alias{setValues}
\alias{simNodes}
\alias{simNodesMV}
\alias{simulate}
\alias{simulate_keywordInfo}
\alias{singleBracket_keywordInfo}
\alias{singleModelIndexAccess_SetupTemplate}
\alias{singleModelValuesAccess}
\alias{singleModelValuesAccessor_SetupTemplate}
\alias{singleVarAccess}
\alias{singleVarAccess_SetupTemplate}
\alias{symTypeFromSymTab}
\alias{values}
\alias{values_keywordInfo}
\alias{values<-}
\alias{varAndIndices2flatIndex}
\alias{varAndIndices2mapParts}
\alias{vectorIndex_2_flat}
\alias{virtualNFprocessing}
\alias{virtualNodeFunctionDefinitions}
\description{
Functions and classes used internally in NIMBLE and not expected to be called directly by users. For the moment all functions and classes are exported while we are sorting out questions about the use of non-exported functions in Reference Class methods.
}
\author{NIMBLE Development Team}