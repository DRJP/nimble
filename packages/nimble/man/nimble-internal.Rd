\name{nimble-internal}
\title{Functions and Classes Internal to NIMBLE}
\alias{accessorVectorLength_setupCodeTemplate}
\alias{addArg}
\alias{addBlockFromCppName}
\alias{addDistKeywordProcessors}
\alias{addDistList2matchFunctions}
\alias{addNecessarySetupCode}
\alias{addNewCode}
\alias{addNodeFxn}
\alias{addNodeFxn_LOOP}
\alias{addSamplerToSpec}
\alias{addSetupCodeNames}
\alias{addSingleModelValuesAccess}
\alias{addSingleVarAccess}
\alias{allLHSNodes_SetupTemplate}
\alias{allModelNodes_SetupTemplate}
\alias{allModelValuesVars_SetupTemplate}
\alias{argInfo2PointerStaticCast}
\alias{as.matrix.CmodelValues}
\alias{as.matrix.modelValuesBaseClass}
\alias{assignNumberedObject}
\alias{autoBlockClass}
\alias{autoBlockModel}
\alias{autoBlockParamDefaults}
\alias{BUGScode}
\alias{BUGScontextClass}
\alias{BUGSdeclClass}
\alias{BUGSsingleContextClass}
\alias{buildConjugateSamplerFunctions}
\alias{buildModelInterface}
\alias{buildNeededObjects}
\alias{buildNimbleFxnInterface}
\alias{cAddBlank}
\alias{calcAdaptationFactor}
\alias{calc_dmnormAltParams}
\alias{calc_E_llk_gen}
\alias{calculateDiff_keywordInfo}
\alias{calculate_keywordInfo}
\alias{callToPackVPtrs}
\alias{cc_createStructureExpr}
\alias{cCopyVariableRows}
\alias{cc_structureExprName}
\alias{cc_vectorizedComponentCheck}
\alias{cGetNRow}
\alias{character2index}
\alias{checkNimbleFunctionListCpp}
\alias{checkNimbleOrRfunctionNames}
\alias{checkRSHonlyInit}
\alias{cloglog}
\alias{Cmatrix2mvOneVar}
\alias{CmodelValues}
\alias{CmultiNimbleFunctionClass}
\alias{code2Name_fromArgList}
\alias{codeProcessIfThenElse}
\alias{combineIndices2Flat}
\alias{compareConjugacyLists}
\alias{conjugacyClass}
\alias{conjugacyRelationshipsClass}
\alias{conjugacyRelationshipsInputList}
\alias{conjugacyRelationshipsObject}
\alias{conjugateSamplerDefinitions}
\alias{copierVector}
\alias{copierVector_setupCodeTemplate}
\alias{copyFromRobject}
\alias{copyFromRobjectViaActiveBindings}
\alias{cppBUGSmodelClass}
\alias{cppClassDef}
\alias{cppOptimObject}
\alias{createDefault_isDataObj}
\alias{createDFfromABlist}
\alias{createNamedObjectsFromList}
\alias{cube}
\alias{d_dist_keywordInfo}
\alias{deparse}
\alias{dependentClass}
\alias{deregisterDistributions}
\alias{determineNdimFromOneCase}
\alias{determineNdimsFromNfproc}
\alias{determineNodeIndexSizes}
\alias{d_exp_nimble_keywordInfo}
\alias{d_gamma_keywordInfo}
\alias{dimOrLength}
\alias{distfun}
\alias{dollarSign_keywordInfo}
\alias{doubleBracket_keywordInfo}
\alias{evalBracketArgs}
\alias{evalBracketArgsKnownBracket}
\alias{existsFunctionEnvVar}
\alias{expandIndexSet4sapply}
\alias{expit}
\alias{extractFlatIndices_wVarInfo}
\alias{funName2OptimFunName}
\alias{gd_allNeighbors}
\alias{gd_getDependencies_IDs}
\alias{genIndexVarValues_recurse}
\alias{genLogProbNodeExprAndReplacements}
\alias{genReplacementsAndCodeRecurse}
\alias{getAdditonalArgsListForOptim}
\alias{getArgInfoFromNFSym}
\alias{getArgsFromOptimCallForTargetFun}
\alias{getBoolValue}
\alias{getBUGSexampleDir}
\alias{getCallText}
\alias{getCharacterValue}
\alias{getCharacterVectorValue}
\alias{getDependencyPaths}
\alias{getDistribution}
\alias{getDoubleValue}
\alias{getFunctionEnvVar}
\alias{getFxnVectorPtr}
\alias{getIntValue}
\alias{getLoadingNamespace}
\alias{getLogProb_keywordInfo}
\alias{getModelAccessorValues}
\alias{getModelValuesAccessorValues}
\alias{getModelValuesSpec}
\alias{getMVName}
\alias{getMVptr}
\alias{getNamedObjected}
\alias{getNimbleFunctionEnvironment}
\alias{getNimbleTypes}
\alias{getNimValues}
\alias{getNodeFxnPtrs}
\alias{getNumberedObject}
\alias{getPosteriorDensityFromConjSampler}
\alias{getPosteriorDensityFromConjSampler_virtual}
\alias{getSetCharacter}
\alias{getSetCharacterVector}
\alias{getSetDoubleScalar}
\alias{getSetIntegerScalar}
\alias{getSetLogicalScalar}
\alias{getSetModelValues}
\alias{getSetModelValuesPtr}
\alias{getSetModelVarPtr}
\alias{getSetNimbleFunction}
\alias{getSetNimPtrList}
\alias{getSetNumericVector}
\alias{getSize_NumberedObjects}
\alias{getSymbolicParentNodes}
\alias{getSymbolicParentNodesRecurse}
\alias{getValues}
\alias{getVarAndIndices}
\alias{handleScaleAndRateForExpNimble}
\alias{handleScaleAndRateForGamma}
\alias{icloglog}
\alias{ilogit}
\alias{inner_populateNodeFxnVec}
\alias{inprod}
\alias{inverse}
\alias{iprobit}
\alias{is.blank}
\alias{isCodeArgBlank}
\alias{is.indexed}
\alias{isModelValuesSpec}
\alias{is.nf}
\alias{is.nfGenerator}
\alias{isSetupCodeGenerated}
\alias{isSymbolType}
\alias{isValid}
\alias{is.vectorized}
\alias{keywordInfoClass}
\alias{keywordList}
\alias{keywordOnlyMatchDistList}
\alias{labelFunctionCreator}
\alias{length.nimPointerList}
\alias{linkInverses}
\alias{logdet}
\alias{logfact}
\alias{loggam}
\alias{logit}
\alias{makeBUGSclassFields}
\alias{MakeCustomModelClass}
\alias{makeCustomModelValuesClass}
\alias{makeDSLCallforVoidPtr_fromArgInfAndCall}
\alias{makeFixedParameterCallCodeForOptim}
\alias{makefnScaleLine}
\alias{makeGetCodeFromAccessorVector}
\alias{makeIndexNamePieces}
\alias{makeMapInfoFromAccessorVector}
\alias{makeMapInfoFromAccessorVectorFaster}
\alias{makeMV_GID_Map}
\alias{makeNewParsCharCopyLine}
\alias{makeNewSpecFromOldSpec}
\alias{makeOptimFunctionCallLine}
\alias{makeSetCodeFromAccessorVector}
\alias{makeStaticCastingChunk}
\alias{makeVoidPointerName_fromObjName}
\alias{map_SetupTemplate}
\alias{matchAndFill.call}
\alias{matchDistList}
\alias{matchFunctions}
\alias{matchKeywordCode}
\alias{matchKeywordCodeMemberFun}
\alias{matrix2mv}
\alias{MCMCsuiteClass}
\alias{modelDefInfoClass}
\alias{modelValuesAccessorVector}
\alias{modelValuesAccessorVector_setupCodeTemplate}
\alias{modelVariableAccessorVector}
\alias{modelVariableAccessorVector_setupCodeTemplate}
\alias{mvInfoClass}
\alias{ndf_createStochCalculateTrunc}
\alias{ndf_createStochSimulateTrunc}
\alias{newManyModelValuesAccess}
\alias{newManyVarAccess}
\alias{newNodeFxnVec}
\alias{newNumberedObjects}
\alias{newObjElementPtr}
\alias{newSpacesFunction}
\alias{nfCompilationInfoClass}
\alias{nfGetDefVar}
\alias{nf_getGeneratorFunction}
\alias{nf_getInstances}
\alias{nf_getMethodList}
\alias{nf_getRefClassObject}
\alias{nf_getSetupOutputNames}
\alias{nfProcessing}
\alias{nimArray}
\alias{nimbleFunctionList}
\alias{nimbleOrRfunctionNames}
\alias{nimbleProjectClass}
\alias{nimbleUniqueID}
\alias{nimCopy_keywordInfo}
\alias{nimEquals}
\alias{nimOptim}
\alias{nimOptim_keywordInfo}
\alias{nimPointerList}
\alias{nimStep}
\alias{nimVector}
\alias{nl_addIndicesToVariables}
\alias{nl_aggregateConsecutiveBlocks}
\alias{nl_checkNodeNamesInModel}
\alias{nl_checkVarNamesInModel}
\alias{nl_createVarsAndFlatIndexRanges}
\alias{nl_determineFlatIndex}
\alias{nl_expandNodeIndex}
\alias{nl_expandNodeIndexExpr}
\alias{nl_expandNodeNames}
\alias{nl_getVarNameFromNodeName}
\alias{nl_nodeVectorReadyNodes}
\alias{nl_removeNodeNamesNotInSymbolTable}
\alias{nl_vectorizedExpandNodeIndex}
\alias{nl_vectorizedExpandNodeIndexExprs}
\alias{node_determ}
\alias{nodeFunction}
\alias{nodeFunctionVector}
\alias{nodeFunctionVector_SetupTemplate}
\alias{nodeInit_virtual}
\alias{numberedModelValuesAccessors}
\alias{numberedModelVariableAccessors}
\alias{numberedObjects}
\alias{OptimFun_argDefs}
\alias{OptimReadyFunction}
\alias{optimReadyFun_setupCodeTemplate}
\alias{parseEvalNumeric}
\alias{pfStep}
\alias{pfStepVirtual}
\alias{phi}
\alias{plotABS}
\alias{pointAt}
\alias{populateCopierVector}
\alias{populateManyModelValuesMapAccess}
\alias{populateManyModelVarMapAccess}
\alias{populateNodeFxnVec}
\alias{populateNodeFxnVec_OLD}
\alias{posteriorClass}
\alias{pow}
\alias{pq_exp_nimble_keywordInfo}
\alias{pq_gamma_keywordInfo}
\alias{printMinTimeABS}
\alias{probit}
\alias{processKeyword}
\alias{processMonitorNames}
\alias{qexp_nimble}
\alias{qp_dist_keywordInfo}
\alias{qt_nonstandard}
\alias{rcat}
\alias{RCfunInfoClass}
\alias{reduceDF}
\alias{registerDistributions}
\alias{removeIndexing}
\alias{removeLogProbName}
\alias{removeNodeFxn}
\alias{removeSingleModelValuesAccess}
\alias{removeSingleVarAccess}
\alias{removeVariableFromEnv}
\alias{resizeNodeFxnVec}
\alias{resize_NumberedObjects}
\alias{rexp_nimble}
\alias{rexp_nimble_keywordInfo}
\alias{rgamma_keywordInfo}
\alias{RMakeCustomModelClass}
\alias{Rmatrix2mvOneVar}
\alias{rmulti}
\alias{Rname2CppName}
\alias{rt_nonstandard}
\alias{sampler_BASE}
\alias{sampler_conjugate_dbeta}
\alias{sampler_conjugate_ddirch}
\alias{sampler_conjugate_dgamma}
\alias{sampler_conjugate_dmnorm}
\alias{sampler_conjugate_dnorm}
\alias{sampler_conjugate_dwish}
\alias{sampler_ess}
\alias{sampler_RW_log}
\alias{samplerSpec}
\alias{setAndCalculateDiff}
\alias{setBoolValue}
\alias{setCharacterValue}
\alias{setCharacterVectorValue}
\alias{setDoublePtrFromSinglePtr}
\alias{setDoubleValue}
\alias{setIntValue}
\alias{setNimValues}
\alias{setOnePtrVectorOfPtrs}
\alias{setPtrVectorOfPtrs}
\alias{setupCodeTemplateClass}
\alias{setValues}
\alias{simulate_keywordInfo}
\alias{singleBracket_keywordInfo}
\alias{singleModelIndexAccess_SetupTemplate}
\alias{singleModelValuesAccess}
\alias{singleModelValuesAccessor_SetupTemplate}
\alias{singleVarAccess}
\alias{singleVarAccess_SetupTemplate}
\alias{stochNodeInit}
\alias{stripArgs}
\alias{symTypeFromSymTab}
\alias{valueInCompiledNimbleFunction}
\alias{valuesAccessorVector}
\alias{values_keywordInfo}
\alias{varAndIndices2flatIndex}
\alias{varAndIndices2mapParts}
\alias{vectorIndex_2_flat}
\alias{virtualNFprocessing}
\alias{virtualNodeFunctionDefinitions}
\alias{whyInvalid}
\description{
Functions and classes used internally in NIMBLE and not expected to be called directly by users. For the moment all functions and classes are exported while we are sorting out questions about the use of non-exported functions in Reference Class methods.
}
\author{NIMBLE Development Team}