% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/lwF_build.R
\name{buildLWF}
\alias{buildLWF}
\title{Creates a Liu and West filter.}
\usage{
buildLWF(model, nodes, params = NA, d = 0.99, silent = FALSE)
}
\arguments{
\item{model}{A nimble model object, typically representing a state
space model or a hidden Markov model}

\item{nodes}{A character vector specifying the latent model nodes
over which the particle filter will stochastically integrate over to
estimate the log-likelihood function}

\item{params}{A character vector sepcifying the parameters you would
like to estimate.}

\item{d}{A discount factor for the LW filter.  Should be close to,
but not above, 1.}
}
\description{
Creates a Liu and West filter.
}
\details{
The resulting specialized particle filter algorthm will accept a
 single integer argument (m, default 10,000), which specifies the number
 of random \'particles\' to use for estimating the log-likelihood.  The algorithm
 returns the estimated log-likelihood value, and saves
 unequally weighted samples from the posterior distribution of the latent
 states in mv['x',], with corresponding unlogged weights in mv['wts',].
 An equally weighted sample from the posterior can be found in mv['xs',].
 Samples from the posterior distribution of the specified parameters are in
 mv['params',].
}
\examples{
model <- nimbleModel(code = ...)
my_LWF <- buildPF(model, 'x[1:100]')
Cmodel <- compileNimble(model)
Cmy_LWF <- compileNimble(my_LWF, project = model)
logLike <- Cmy_LWF(m = 100000)
lw_X <- Cmy_LWF$mv['xs',]
lw_pars <- Cmy_LWF$mv['pars',]
}
\author{
Nick Michaud
}
\seealso{
Other filtering.methods: \code{\link{buildAuxF}};
  \code{\link{buildBootF}}
}

